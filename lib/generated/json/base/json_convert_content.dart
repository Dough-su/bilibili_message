// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutter/material.dart' show debugPrint;
import 'package:muse_siixn_i/model/dongtai_response_entity.dart';
import 'package:muse_siixn_i/model/emoji_entity.dart';
import 'package:muse_siixn_i/model/medal_wall_entity.dart';
import 'package:muse_siixn_i/model/pic_response_entity.dart';
import 'package:muse_siixn_i/model/qrcode_entity.dart';
import 'package:muse_siixn_i/model/qrcode_status_entity.dart';
import 'package:muse_siixn_i/model/web_message_entity.dart';

JsonConvert jsonConvert = JsonConvert();

typedef JsonConvertFunction<T> = T Function(Map<String, dynamic> json);
typedef EnumConvertFunction<T> = T Function(String value);
typedef ConvertExceptionHandler = void Function(Object error, StackTrace stackTrace);

class JsonConvert {
  static ConvertExceptionHandler? onError;

  static Map<String, JsonConvertFunction> get convertFuncMap =>
      {
        (DongtaiResponseEntity).toString(): DongtaiResponseEntity.fromJson,
        (DongtaiResponseData).toString(): DongtaiResponseData.fromJson,
        (DongtaiResponseDataItems).toString(): DongtaiResponseDataItems
            .fromJson,
        (DongtaiResponseDataItemsBasic)
            .toString(): DongtaiResponseDataItemsBasic.fromJson,
        (DongtaiResponseDataItemsBasicLikeIcon)
            .toString(): DongtaiResponseDataItemsBasicLikeIcon.fromJson,
        (DongtaiResponseDataItemsModules)
            .toString(): DongtaiResponseDataItemsModules.fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthor)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthor.fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatar)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatar
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarContainerSize)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarContainerSize
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayers)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayers
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayers)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayers
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpec)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpec
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecPosSpec)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecPosSpec
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecRenderSpec)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecRenderSpec
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecSizeSpec)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecSizeSpec
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfig)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfig
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTags)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTags
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsAvatarLayer)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsAvatarLayer
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfg)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfg
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfig)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfig
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfigWebCssStyle)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfigWebCssStyle
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResource)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResource
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImage)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImage
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrc)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrc
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrcRemote)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrcRemote
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorDecorate)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorDecorate
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorDecorateFan)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorDecorateFan
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorOfficialVerify)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorOfficialVerify
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorPendant)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorPendant
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorVip)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorVip
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleAuthorVipLabel)
            .toString(): DongtaiResponseDataItemsModulesModuleAuthorVipLabel
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleDynamic)
            .toString(): DongtaiResponseDataItemsModulesModuleDynamic.fromJson,
        (DongtaiResponseDataItemsModulesModuleDynamicMajor)
            .toString(): DongtaiResponseDataItemsModulesModuleDynamicMajor
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleDynamicMajorOpus)
            .toString(): DongtaiResponseDataItemsModulesModuleDynamicMajorOpus
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleDynamicMajorOpusPics)
            .toString(): DongtaiResponseDataItemsModulesModuleDynamicMajorOpusPics
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleDynamicMajorOpusSummary)
            .toString(): DongtaiResponseDataItemsModulesModuleDynamicMajorOpusSummary
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleDynamicMajorOpusSummaryRichTextNodes)
            .toString(): DongtaiResponseDataItemsModulesModuleDynamicMajorOpusSummaryRichTextNodes
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleInteraction)
            .toString(): DongtaiResponseDataItemsModulesModuleInteraction
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleInteractionItems)
            .toString(): DongtaiResponseDataItemsModulesModuleInteractionItems
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleInteractionItemsDesc)
            .toString(): DongtaiResponseDataItemsModulesModuleInteractionItemsDesc
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleInteractionItemsDescRichTextNodes)
            .toString(): DongtaiResponseDataItemsModulesModuleInteractionItemsDescRichTextNodes
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleMore)
            .toString(): DongtaiResponseDataItemsModulesModuleMore.fromJson,
        (DongtaiResponseDataItemsModulesModuleMoreThreePointItems)
            .toString(): DongtaiResponseDataItemsModulesModuleMoreThreePointItems
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleMoreThreePointItemsParams)
            .toString(): DongtaiResponseDataItemsModulesModuleMoreThreePointItemsParams
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleMoreThreePointItemsModal)
            .toString(): DongtaiResponseDataItemsModulesModuleMoreThreePointItemsModal
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleStat)
            .toString(): DongtaiResponseDataItemsModulesModuleStat.fromJson,
        (DongtaiResponseDataItemsModulesModuleStatComment)
            .toString(): DongtaiResponseDataItemsModulesModuleStatComment
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleStatForward)
            .toString(): DongtaiResponseDataItemsModulesModuleStatForward
            .fromJson,
        (DongtaiResponseDataItemsModulesModuleStatLike)
            .toString(): DongtaiResponseDataItemsModulesModuleStatLike.fromJson,
        (DongtaiResponseDataItemsOrig).toString(): DongtaiResponseDataItemsOrig
            .fromJson,
        (DongtaiResponseDataItemsOrigBasic)
            .toString(): DongtaiResponseDataItemsOrigBasic.fromJson,
        (DongtaiResponseDataItemsOrigBasicLikeIcon)
            .toString(): DongtaiResponseDataItemsOrigBasicLikeIcon.fromJson,
        (DongtaiResponseDataItemsOrigModules)
            .toString(): DongtaiResponseDataItemsOrigModules.fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthor)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthor
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatar)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatar
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarContainerSize)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarContainerSize
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayers)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayers
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayers)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayers
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpec)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpec
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecPosSpec)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecPosSpec
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecRenderSpec)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecRenderSpec
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecSizeSpec)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecSizeSpec
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfig)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfig
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTags)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTags
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsAvatarLayer)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsAvatarLayer
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfg)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfg
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfig)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfig
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfigWebCssStyle)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfigWebCssStyle
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResource)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResource
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImage)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImage
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrc)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrc
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrcRemote)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrcRemote
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorOfficialVerify)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorOfficialVerify
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorPendant)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorPendant
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorVip)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorVip
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleAuthorVipLabel)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleAuthorVipLabel
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleDynamic)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleDynamic
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleDynamicMajor)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleDynamicMajor
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchive)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchive
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchiveBadge)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchiveBadge
            .fromJson,
        (DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchiveStat)
            .toString(): DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchiveStat
            .fromJson,
        (EmojiEntity).toString(): EmojiEntity.fromJson,
        (EmojiData).toString(): EmojiData.fromJson,
        (EmojiDataSetting).toString(): EmojiDataSetting.fromJson,
        (EmojiDataPackages).toString(): EmojiDataPackages.fromJson,
        (EmojiDataPackagesMeta).toString(): EmojiDataPackagesMeta.fromJson,
        (EmojiDataPackagesEmote).toString(): EmojiDataPackagesEmote.fromJson,
        (EmojiDataPackagesEmoteMeta).toString(): EmojiDataPackagesEmoteMeta
            .fromJson,
        (EmojiDataPackagesEmoteFlags).toString(): EmojiDataPackagesEmoteFlags
            .fromJson,
        (EmojiDataPackagesFlags).toString(): EmojiDataPackagesFlags.fromJson,
        (MedalWallEntity).toString(): MedalWallEntity.fromJson,
        (MedalWallData).toString(): MedalWallData.fromJson,
        (MedalWallDataList).toString(): MedalWallDataList.fromJson,
        (MedalWallDataListMedalInfo).toString(): MedalWallDataListMedalInfo
            .fromJson,
        (PicResponseEntity).toString(): PicResponseEntity.fromJson,
        (PicResponseData).toString(): PicResponseData.fromJson,
        (QrcodeEntity).toString(): QrcodeEntity.fromJson,
        (QrcodeData).toString(): QrcodeData.fromJson,
        (QrcodeStatusEntity).toString(): QrcodeStatusEntity.fromJson,
        (QrcodeStatusData).toString(): QrcodeStatusData.fromJson,
        (WebMessageEntity).toString(): WebMessageEntity.fromJson,
        (WebMessageData).toString(): WebMessageData.fromJson,
        (WebMessageDataMessages).toString(): WebMessageDataMessages.fromJson,
        (WebMessageDataEInfos).toString(): WebMessageDataEInfos.fromJson,
      };

  T? convert<T>(dynamic value, {EnumConvertFunction? enumConvert}) {
    if (value == null) {
      return null;
    }
    if (value is T) {
      return value;
    }
    try {
      return _asT<T>(value, enumConvert: enumConvert);
    } catch (e, stackTrace) {
      debugPrint('asT<$T> $e $stackTrace');
      if (onError != null) {
        onError!(e, stackTrace);
      }
      return null;
    }
  }

  List<T?>? convertList<T>(List<dynamic>? value,
      {EnumConvertFunction? enumConvert}) {
    if (value == null) {
      return null;
    }
    try {
      return value.map((dynamic e) => _asT<T>(e, enumConvert: enumConvert))
          .toList();
    } catch (e, stackTrace) {
      debugPrint('asT<$T> $e $stackTrace');
      if (onError != null) {
        onError!(e, stackTrace);
      }
      return <T>[];
    }
  }

  List<T>? convertListNotNull<T>(dynamic value,
      {EnumConvertFunction? enumConvert}) {
    if (value == null) {
      return null;
    }
    try {
      return (value as List<dynamic>).map((dynamic e) =>
      _asT<T>(e, enumConvert: enumConvert)!).toList();
    } catch (e, stackTrace) {
      debugPrint('asT<$T> $e $stackTrace');
      if (onError != null) {
        onError!(e, stackTrace);
      }
      return <T>[];
    }
  }

  T? _asT<T extends Object?>(dynamic value,
      {EnumConvertFunction? enumConvert}) {
    final String type = T.toString();
    final String valueS = value.toString();
    if (enumConvert != null) {
      return enumConvert(valueS) as T;
    } else if (type == "String") {
      return valueS as T;
    } else if (type == "int") {
      final int? intValue = int.tryParse(valueS);
      if (intValue == null) {
        return double.tryParse(valueS)?.toInt() as T?;
      } else {
        return intValue as T;
      }
    } else if (type == "double") {
      return double.parse(valueS) as T;
    } else if (type == "DateTime") {
      return DateTime.parse(valueS) as T;
    } else if (type == "bool") {
      if (valueS == '0' || valueS == '1') {
        return (valueS == '1') as T;
      }
      return (valueS == 'true') as T;
    } else if (type == "Map" || type.startsWith("Map<")) {
      return value as T;
    } else {
      if (convertFuncMap.containsKey(type)) {
        if (value == null) {
          return null;
        }
        return convertFuncMap[type]!(Map<String, dynamic>.from(value)) as T;
      } else {
        throw UnimplementedError('$type unimplemented');
      }
    }
  }

  //list is returned by type
  static M? _getListChildType<M>(List<Map<String, dynamic>> data) {
    if (<DongtaiResponseEntity>[] is M) {
      return data.map<DongtaiResponseEntity>((Map<String, dynamic> e) =>
          DongtaiResponseEntity.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseData>[] is M) {
      return data.map<DongtaiResponseData>((Map<String, dynamic> e) =>
          DongtaiResponseData.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItems>[] is M) {
      return data.map<DongtaiResponseDataItems>((Map<String, dynamic> e) =>
          DongtaiResponseDataItems.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsBasic>[] is M) {
      return data.map<DongtaiResponseDataItemsBasic>((Map<String, dynamic> e) =>
          DongtaiResponseDataItemsBasic.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsBasicLikeIcon>[] is M) {
      return data.map<DongtaiResponseDataItemsBasicLikeIcon>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsBasicLikeIcon.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModules>[] is M) {
      return data.map<DongtaiResponseDataItemsModules>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModules.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthor>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleAuthor>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthor.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthorAvatar>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleAuthorAvatar>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatar.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthorAvatarContainerSize>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarContainerSize>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarContainerSize
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayers>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayers>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayers
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayers>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayers>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayers
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpec>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpec>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpec
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecPosSpec>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecPosSpec>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecPosSpec
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecRenderSpec>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecRenderSpec>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecRenderSpec
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecSizeSpec>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecSizeSpec>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecSizeSpec
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfig>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfig>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfig
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTags>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTags>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTags
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsAvatarLayer>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsAvatarLayer>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsAvatarLayer
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfg>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfg>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfg
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfig>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfig>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfig
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfigWebCssStyle>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfigWebCssStyle>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfigWebCssStyle
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResource>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResource>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResource
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImage>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImage>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImage
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrc>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrc>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrc
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrcRemote>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrcRemote>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrcRemote
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthorDecorate>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleAuthorDecorate>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorDecorate.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthorDecorateFan>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleAuthorDecorateFan>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorDecorateFan.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthorOfficialVerify>[] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleAuthorOfficialVerify>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorOfficialVerify.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthorPendant>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleAuthorPendant>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorPendant.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthorVip>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleAuthorVip>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorVip.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleAuthorVipLabel>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleAuthorVipLabel>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleAuthorVipLabel.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleDynamic>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleDynamic>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleDynamic.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleDynamicMajor>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleDynamicMajor>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleDynamicMajor.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleDynamicMajorOpus>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleDynamicMajorOpus>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleDynamicMajorOpus.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleDynamicMajorOpusPics>[] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleDynamicMajorOpusPics>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleDynamicMajorOpusPics.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleDynamicMajorOpusSummary>[] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleDynamicMajorOpusSummary>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleDynamicMajorOpusSummary.fromJson(
              e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleDynamicMajorOpusSummaryRichTextNodes>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleDynamicMajorOpusSummaryRichTextNodes>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleDynamicMajorOpusSummaryRichTextNodes
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleInteraction>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleInteraction>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleInteraction.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleInteractionItems>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleInteractionItems>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleInteractionItems.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleInteractionItemsDesc>[] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleInteractionItemsDesc>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleInteractionItemsDesc.fromJson(e))
          .toList() as M;
    }
    if (<
        DongtaiResponseDataItemsModulesModuleInteractionItemsDescRichTextNodes>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleInteractionItemsDescRichTextNodes>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleInteractionItemsDescRichTextNodes
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleMore>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleMore>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleMore.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleMoreThreePointItems>[] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleMoreThreePointItems>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleMoreThreePointItems.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleMoreThreePointItemsParams>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleMoreThreePointItemsParams>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleMoreThreePointItemsParams
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleMoreThreePointItemsModal>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsModulesModuleMoreThreePointItemsModal>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleMoreThreePointItemsModal
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleStat>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleStat>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleStat.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleStatComment>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleStatComment>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleStatComment.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleStatForward>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleStatForward>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleStatForward.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsModulesModuleStatLike>[] is M) {
      return data.map<DongtaiResponseDataItemsModulesModuleStatLike>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsModulesModuleStatLike.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsOrig>[] is M) {
      return data.map<DongtaiResponseDataItemsOrig>((Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrig.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigBasic>[] is M) {
      return data.map<DongtaiResponseDataItemsOrigBasic>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigBasic.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigBasicLikeIcon>[] is M) {
      return data.map<DongtaiResponseDataItemsOrigBasicLikeIcon>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigBasicLikeIcon.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModules>[] is M) {
      return data.map<DongtaiResponseDataItemsOrigModules>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModules.fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleAuthor>[] is M) {
      return data.map<DongtaiResponseDataItemsOrigModulesModuleAuthor>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthor.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleAuthorAvatar>[] is M) {
      return data.map<DongtaiResponseDataItemsOrigModulesModuleAuthorAvatar>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatar.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarContainerSize>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarContainerSize>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarContainerSize
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayers>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayers>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayers
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayers>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayers>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayers
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpec>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpec>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpec
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecPosSpec>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecPosSpec>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecPosSpec
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecRenderSpec>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecRenderSpec>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecRenderSpec
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecSizeSpec>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecSizeSpec>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersGeneralSpecSizeSpec
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfig>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfig>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfig
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTags>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTags>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTags
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsAvatarLayer>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsAvatarLayer>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsAvatarLayer
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfg>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfg>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfg
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfig>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfig>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfig
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfigWebCssStyle>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfigWebCssStyle>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersLayerConfigTagsGeneralCfgGeneralConfigWebCssStyle
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResource>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResource>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResource
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImage>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImage>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImage
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrc>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrc>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrc
              .fromJson(e)).toList() as M;
    }
    if (<
        DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrcRemote>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrcRemote>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorAvatarFallbackLayersLayersResourceResImageImageSrcRemote
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleAuthorOfficialVerify>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleAuthorOfficialVerify>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorOfficialVerify
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleAuthorPendant>[] is M) {
      return data.map<DongtaiResponseDataItemsOrigModulesModuleAuthorPendant>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorPendant.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleAuthorVip>[] is M) {
      return data.map<DongtaiResponseDataItemsOrigModulesModuleAuthorVip>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorVip.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleAuthorVipLabel>[] is M) {
      return data.map<DongtaiResponseDataItemsOrigModulesModuleAuthorVipLabel>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleAuthorVipLabel.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleDynamic>[] is M) {
      return data.map<DongtaiResponseDataItemsOrigModulesModuleDynamic>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleDynamic.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleDynamicMajor>[] is M) {
      return data.map<DongtaiResponseDataItemsOrigModulesModuleDynamicMajor>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleDynamicMajor.fromJson(e))
          .toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchive>[] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchive>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchive.fromJson(
              e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchiveBadge>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchiveBadge>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchiveBadge
              .fromJson(e)).toList() as M;
    }
    if (<DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchiveStat>[
    ] is M) {
      return data.map<
          DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchiveStat>((
          Map<String, dynamic> e) =>
          DongtaiResponseDataItemsOrigModulesModuleDynamicMajorArchiveStat
              .fromJson(e)).toList() as M;
    }
    if (<EmojiEntity>[] is M) {
      return data.map<EmojiEntity>((Map<String, dynamic> e) =>
          EmojiEntity.fromJson(e)).toList() as M;
    }
    if (<EmojiData>[] is M) {
      return data.map<EmojiData>((Map<String, dynamic> e) =>
          EmojiData.fromJson(e)).toList() as M;
    }
    if (<EmojiDataSetting>[] is M) {
      return data.map<EmojiDataSetting>((Map<String, dynamic> e) =>
          EmojiDataSetting.fromJson(e)).toList() as M;
    }
    if (<EmojiDataPackages>[] is M) {
      return data.map<EmojiDataPackages>((Map<String, dynamic> e) =>
          EmojiDataPackages.fromJson(e)).toList() as M;
    }
    if (<EmojiDataPackagesMeta>[] is M) {
      return data.map<EmojiDataPackagesMeta>((Map<String, dynamic> e) =>
          EmojiDataPackagesMeta.fromJson(e)).toList() as M;
    }
    if (<EmojiDataPackagesEmote>[] is M) {
      return data.map<EmojiDataPackagesEmote>((Map<String, dynamic> e) =>
          EmojiDataPackagesEmote.fromJson(e)).toList() as M;
    }
    if (<EmojiDataPackagesEmoteMeta>[] is M) {
      return data.map<EmojiDataPackagesEmoteMeta>((Map<String, dynamic> e) =>
          EmojiDataPackagesEmoteMeta.fromJson(e)).toList() as M;
    }
    if (<EmojiDataPackagesEmoteFlags>[] is M) {
      return data.map<EmojiDataPackagesEmoteFlags>((Map<String, dynamic> e) =>
          EmojiDataPackagesEmoteFlags.fromJson(e)).toList() as M;
    }
    if (<EmojiDataPackagesFlags>[] is M) {
      return data.map<EmojiDataPackagesFlags>((Map<String, dynamic> e) =>
          EmojiDataPackagesFlags.fromJson(e)).toList() as M;
    }
    if (<MedalWallEntity>[] is M) {
      return data.map<MedalWallEntity>((Map<String, dynamic> e) =>
          MedalWallEntity.fromJson(e)).toList() as M;
    }
    if (<MedalWallData>[] is M) {
      return data.map<MedalWallData>((Map<String, dynamic> e) =>
          MedalWallData.fromJson(e)).toList() as M;
    }
    if (<MedalWallDataList>[] is M) {
      return data.map<MedalWallDataList>((Map<String, dynamic> e) =>
          MedalWallDataList.fromJson(e)).toList() as M;
    }
    if (<MedalWallDataListMedalInfo>[] is M) {
      return data.map<MedalWallDataListMedalInfo>((Map<String, dynamic> e) =>
          MedalWallDataListMedalInfo.fromJson(e)).toList() as M;
    }
    if (<PicResponseEntity>[] is M) {
      return data.map<PicResponseEntity>((Map<String, dynamic> e) =>
          PicResponseEntity.fromJson(e)).toList() as M;
    }
    if (<PicResponseData>[] is M) {
      return data.map<PicResponseData>((Map<String, dynamic> e) =>
          PicResponseData.fromJson(e)).toList() as M;
    }
    if (<QrcodeEntity>[] is M) {
      return data.map<QrcodeEntity>((Map<String, dynamic> e) =>
          QrcodeEntity.fromJson(e)).toList() as M;
    }
    if (<QrcodeData>[] is M) {
      return data.map<QrcodeData>((Map<String, dynamic> e) =>
          QrcodeData.fromJson(e)).toList() as M;
    }
    if (<QrcodeStatusEntity>[] is M) {
      return data.map<QrcodeStatusEntity>((Map<String, dynamic> e) =>
          QrcodeStatusEntity.fromJson(e)).toList() as M;
    }
    if (<QrcodeStatusData>[] is M) {
      return data.map<QrcodeStatusData>((Map<String, dynamic> e) =>
          QrcodeStatusData.fromJson(e)).toList() as M;
    }
    if (<WebMessageEntity>[] is M) {
      return data.map<WebMessageEntity>((Map<String, dynamic> e) =>
          WebMessageEntity.fromJson(e)).toList() as M;
    }
    if (<WebMessageData>[] is M) {
      return data.map<WebMessageData>((Map<String, dynamic> e) =>
          WebMessageData.fromJson(e)).toList() as M;
    }
    if (<WebMessageDataMessages>[] is M) {
      return data.map<WebMessageDataMessages>((Map<String, dynamic> e) =>
          WebMessageDataMessages.fromJson(e)).toList() as M;
    }
    if (<WebMessageDataEInfos>[] is M) {
      return data.map<WebMessageDataEInfos>((Map<String, dynamic> e) =>
          WebMessageDataEInfos.fromJson(e)).toList() as M;
    }

    debugPrint("${M.toString()} not found");

    return null;
  }

  static M? fromJsonAsT<M>(dynamic json) {
    if (json is M) {
      return json;
    }
    if (json is List) {
      return _getListChildType<M>(
          json.map((e) => e as Map<String, dynamic>).toList());
    } else {
      return jsonConvert.convert<M>(json);
    }
  }
}